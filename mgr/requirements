#*package toads


#which packages/versions are used:
use cfitsio v2r440
use sex v222
# Root stuff
# use root v3r0500 
# this triggers the whole root "preprocessing"
# macro use_root " -DUSE_ROOT "

# uncomment below if you want the daophot and lightcurve stuff
use lapack v1.1a

#build_strategy no_prototypes  keep_makefiles

#macro cpp g++3
macro shlibbuilder $(cpp) 

macro TOADSBIN "$(TOADSROOT)/$(toads_tag)

set TOADSCARDS $(TOADSROOT)/datacards/

macro toads_stamps $(TOADSBIN)/toadslib.stamp

macro_append pp_cppflags " $(use_root) "

macro_append cppflags " " \
	sun4u "-ansi -pedantic -W -Wall -Wwrite-strings -Wpointer-arith -Wnested-externs -Woverloaded-virtual -Wbad-function-cast -fnonnull-objects"
macro_remove cppflags " " Linux "-Wnested-externs"
macro_remove cppflags " " Linux "-Wbad-function-cast -fnonnull-objects"

#contents of the toadslib library:

library toadslib fitsimagearray.cc fringeutils.cc \
		 datdetec.cc dodetection.cc  candidatestar.cc kernelfit.cc \	
	         nstarmatch.cc rollingstar.cc \
                 quali_box.cc align_box.cc convolution.cc  \ 
                 generalfit.cc seeing_box.cc \
                 datacards.cc sextractor_box.cc \
		 sestar.cc psfmatch.cc nbrandom.c fct2dfit.cc\
	         gtransfo.cc starmatch.cc histo4d.cc histo2d.cc histo1d.cc image.cc dimage.cc \
         	 imageback.cc fitsimage.cc fitstoad.cc basestar.cc fileutils.cc  \
        	 superflat.cc listmatch.cc vutils.cc usnoutils.cc  \
        	 dbfileParse.y dbfileLex.l dbimage.cc wcsutils.cc imagematch.cc \
        	 candstar.cc fitsslice.cc fitsset.cc frame.cc \
	         reducedimage.cc imagesum.cc transformedimage.cc allreducedimage.cc  \
	         imagesubtraction.cc toadscards.cc newsub.cc reducedutils.cc \
		 fastfinder.cc astroutils.cc senearstar.cc \
                detection.cc rootstuff.cc\
		subimage.cc sub.cc stringlist.cc \
                 transformedimageaddfakes.cc wcscon.c addfakes.cc yquemstar.cc\
		 cluster.cc\
                 lapackutils.cc night.cc vignet.cc vignetfit.cc \
	         photstar.cc simultaneousfit.cc \
	         lightcurveguru.cc lightcurve.cc lightcurvebuilder.cc\
		 daophot.cc daophotio.cc daophotutils.cc daophotpsf.cc jimstar.cc\
                ../dao_stuff/*.f ../dao_stuff/*.c\
	        ../cern_stuff/*.F
		


## add things to be built before actually compiling the library.
# the macro toadslib_dependencies seems to be designed for that.
# there are 2 things to do : 

# - generate the alltelinst.{cc,h} files:
macro_append toadslib_dependencies " alltelinst "

# - generate the Root I/O code (the so called dictionary)
macro_append toadslib_dependencies " root_dict "
# the Makefile parts corresponding to these targets are in Makefile



# cpu intensive source files. we do not compile the whole library with optimizer
# due to the difficulty of debugging optimized code.

macro_append fitstoad_cppflags "-Wno-unused "
macro optimize_it " -O4 "
macro_append imagesubtraction_cppflags $(optimize_it)
macro_append lmatch_cppflags  $(optimize_it)
macro_append kernelfit_cppflags  $(optimize_it)
macro_append dimage_cppflags  $(optimize_it)
macro_append image_cppflags      $(optimize_it)
macro_append listmatch_cppflags $(optimize_it)
macro_append convolution_cppflags $(optimize_it) 
macro_append vutils_cppflags     $(optimize_it)
macro_append imagerebin_cppflags $(optimize_it)
macro_append simultaneousfit_cppflags $(optimize_it)
macro_append vignetfit_cppflags $(optimize_it)
macro_append lapackutils_cppflags $(optimize_it)
macro_append imagesum_cppflags $(optimize_it)
macro_append fastfinder_cppflags $(optimize_it)


macro daoflags " -g " \
	 Linux       " -O3 -ansi -pedantic -Wall "

macro mathsubs_fflags $(daoflags) 
macro allstsubs_fflags $(daoflags)
macro iosubs_fflags $(daoflags) 
macro unxsubs_fflags $(daoflags)
macro fiosubs_fflags $(daoflags)
macro fitsfort_fflags $(daoflags)
macro fitsio_fflags $(daoflags)
macro fitslinx_fflags $(daoflags)
macro fitstars_fflags $(daoflags)
macro fotometry_fflags $(daoflags)
macro peak_fflags $(daoflags)
macro daopsf_fflags $(daoflags)
macro daotools_fflags $(daoflags)


#path_remove  LD_LIBRARY_PATH "/toads/"
#path_append LD_LIBRARY_PATH "${TOADSROOT}/$(toads_tag)"

#how to link any toads application
macro toads_linkopts "-Wl,-rpath $(TOADSBIN) -L$(TOADSBIN) -ltoadslib $(f77libs)"

branches dbutils 

application make_daophot make_daophot.cc
macro make_daophotstamps $(TOADSBIN)/toadslib.stamp

application make_lightcurve make_lightcurve.cc
macro make_lightcurvestamps $(TOADSBIN)/toadslib.stamp

application newmake_sub newmake_sub.cc
#macro newmake_sublinkopts -ldmalloc
macro newmake_substamps $(TOADSBIN)/toadslib.stamp

application makesub makesub.cc

application matchNimages matchNimages.cc

application flatfield flatfield.cc
macro flatfieldstamps $(TOADSBIN)/toadslib.stamp

application removeback removeback.cc
macro removebackstamps $(TOADSBIN)/toadslib.stamp

application makefringe makefringe.cc
macro makefringestamps $(TOADSBIN)/toadslib.stamp

application defringe defringe.cc
macro defringestamps  $(TOADSBIN)/toadslib.stamp

application preptoads preptoads.cc
macro preptoadsstamps  $(TOADSBIN)/toadslib.stamp

#application make_catalog
application make_catalog make_catalog.cc
macro make_catalogstamps $(TOADSBIN)/toadslib.stamp

#application test_phot
#application test_phot test_phot.cc
#macro test_photstamps $(TOADSBIN)/toadslib.stamp

application sum_images sum_images.cc
macro sum_imagesstamps $(TOADSBIN)/toadslib.stamp

#application make_mosaique
#application make_mosaique make_mosaique.cc
#macro make_mosaiquestamps $(TOADSBIN)/toadslib.stamp

#application header
application header header.cc
macro headerstamps $(TOADSBIN)/toadslib.stamp

#application matchusno
application matchusno matchusno.cc
macro matchusnostamps $(TOADSBIN)/toadslib.stamp

#application sky_hist sky_hist.cc
macro sky_histstamps $(TOADSBIN)/toadslib.stamp
macro sky_histlinkopts $(CERNLIB)

#application mkskyhist mkskyhist.cc
#macro mkskyhiststamps $(TOADSBIN)/toadslib.stamp
#macro mkskyhistlinkopts $(CERNLIB)

application skylev skylev.cc
macro skylevstamps $(TOADSBIN)/toadslib.stamp

application dbimstat dbimstat.cc

application changekey changekey.cc
macro changekeystamps $(TOADSBIN)/toadslib.stamp

application valid_fits valid_fits.cc
macro valid_fitsstamps $(TOADSBIN)/toadslib.stamp

application relative_ln -s=../dbutils  relative_ln.cc
macro relative_lnstamps $(TOADSBIN)/toadslib.stamp

application astrom astrom.cc
macro astromstamps $(TOADSBIN)/toadslib.stamp

application findsatellite findsatellite.cc
macro findsatellitestamps $(TOADSBIN)/toadslib.stamp

application make_cosmic make_cosmic.cc
macro make_cosmicstamps $(TOADSBIN)/toadslib.stamp


# branch (i.e. other source directory here)
branches dbutils
application install_image -s=../dbutils install_image.cc
macro install_imagestamps $(TOADSBIN)/toadslib.stamp

application assign -s=../dbutils assign.cc
macro assignstamps $(TOADSBIN)/toadslib.stamp

application dbls  -s=../dbutils dbls.cc
macro dblsstamps $(TOADSBIN)/toadslib.stamp

macro_append l2tup_cflags "-Wno-unused "
application l2tup -s=../dbutils l2tup.c
macro l2tuplinkopts $(CERNLIB)

#macro NETCDFROOT /users/snovae/deephome/idlcsrc/netcdf/netcdf-3.4/src

#application l2ncdf -s=../dbutils l2ncdf.cc
#macro l2ncdf_cppflags "-I$(NETCDFROOT)/cxx/ -I$(NETCDFROOT)/libsrc/"
#macro l2ncdflinkopts "-L$(NETCDFROOT)/`uname`/ -lnetcdf_c++ -lnetcdf"


application split_fits -s=../dbutils split_fits.cc
macro split_fitsstamps  $(TOADSBIN)/toadslib.stamp

#application image_combine image_combine.cc
#macro image_combinestamps $(TOADSBIN)/toadslib.stamp

#macro src $(TOADSROOT)/src/

private 

#macro make_shlib "echo shlib not done on purpose"

# compilation options
macro_append cppflags " -g " 
# profiling
#macro_append cppflags -pg
#macro_append cpplink -pg

macro_append cflags " -g  " \
       Linux " -Wall -g"
macro lex "lex $(lexflags)"
macro f77libs "-lf"\
    i386_linux24 "-lg2c -lm" \
    Linux     "-lg2c -lm" \
    alpha     "-lfor -lFutil -lUfor -lm" \
    sun4u     "-L/opt/SUNWspro/SC4.0/lib/  -lF77 -lM77 -lsunmath -lm" 

macro CERNLIB '`cernlib packlib mathlib` $(f77libs)'


# storage
# on Linux/GNU, we can avoid setting LD_LIBRAY_PATH by linking using
# g++ -Wl,rpath WHERE_THE_LIB_IS
#



# applications for fringes
###################################################################
macro_append fringeutils_cppflags   $(optimize_it) 

application  fringefinder fringefinder.cc
macro_append fringefinder_cppflags   $(optimize_it) 
macro        fringefinderstamps $(TOADSBIN)/toadslib.stamp

application  defringe2 defringe2.cc
macro_append defringe2_cppflags   $(optimize_it) 
macro        defringe2stamps $(TOADSBIN)/toadslib.stamp

application  elixir_to_toads elixir_to_toads.cc
macro        elixir_to_toadsstamps $(TOADSBIN)/toadslib.stamp

application  trim trim.cc
macro	     trimstamps $(TOADSBIN)/toadslib.stamp	

application  selection selection.cc
macro	     selectionstamps $(TOADSBIN)/toadslib.stamp	
