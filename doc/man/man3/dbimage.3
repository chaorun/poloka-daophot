.TH "DbImage" 3 "8 Feb 2004" "toads" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DbImage \- 
.SH SYNOPSIS
.br
.PP
\fC#include <dbimage.h>\fR
.PP
Inherited by \fBReducedImage\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBDbImage\fR (const string &ImageName)"
.br
.RI "\fIa constructor: its argument is a unique image identifier (eg r124280).\fR"
.ti -1c
.RI "\fBDbImage\fR (const char *ImageName)"
.br
.RI "\fIa constructor: its argument is a unique image identifier (eg r124280).\fR"
.ti -1c
.RI "\fBDbImage\fR ()"
.br
.ti -1c
.RI "bool \fBIsValid\fR () const"
.br
.RI "\fIfor images obtained from the above constructor, checks that the image could be located.\fR"
.ti -1c
.RI "string \fBName\fR () const"
.br
.RI "\fIreturns the image name.\fR"
.ti -1c
.RI "string \fBDir\fR () const"
.br
.ti -1c
.RI "\fBDbImage\fR (const string &ImageName, const Path *APath)"
.br
.ti -1c
.RI "bool \fBoperator==\fR (const DbImage &Right) const"
.br
.RI "\fIto tell if we have twice the same image.\fR"
.ti -1c
.RI "string \fBFitsImageName\fR (const DbImageKind Kind) const"
.br
.RI "\fIreturns the \fBFitsImage\fR file name (a file name for the file system).\fR"
.ti -1c
.RI "string \fBElixirName\fR () const"
.br
.RI "\fIout of elixir name.\fR"
.ti -1c
.RI "string \fBImageBackName\fR (const DbImageKind Kind) const"
.br
.RI "\fIsame for the \fBImageBack\fR (background value and rms interpolated map).\fR"
.ti -1c
.RI "string \fBFitsFlatName\fR () const"
.br
.RI "\fIthe name of the fits file containig the flatfield used for flatfielding.\fR"
.ti -1c
.RI "string \fBFitsBiasName\fR () const"
.br
.RI "\fIsame for bias.\fR"
.ti -1c
.RI "string \fBFitsDarkName\fR () const"
.br
.RI "\fIsame for dark.\fR"
.ti -1c
.RI "string \fBFitsWeightName\fR () const"
.br
.RI "\fIname of the weight imag.\fR"
.ti -1c
.RI "string \fBFitsDeadName\fR () const"
.br
.RI "\fIsame for dead pixel map.\fR"
.ti -1c
.RI "string \fBFitsBadName\fR () const"
.br
.RI "\fIsame for bad pixel map (built from weight map).\fR"
.ti -1c
.RI "string \fBFitsCosmicName\fR () const"
.br
.RI "\fIsame for cosmic pixel map.\fR"
.ti -1c
.RI "string \fBFitsSatelliteName\fR () const"
.br
.RI "\fIsame for satellite pixel map.\fR"
.ti -1c
.RI "string \fBFitsFringeName\fR () const"
.br
.RI "\fIsame for fringe pattern map map.\fR"
.ti -1c
.RI "string \fBFitsBackName\fR () const"
.br
.RI "\fIbackground image.\fR"
.ti -1c
.RI "string \fBFitsMiniBackName\fR () const"
.br
.RI "\fImin background image.\fR"
.ti -1c
.RI "string \fBFitsSaturName\fR () const"
.br
.RI "\fIsame for saturated stars pixels map.\fR"
.ti -1c
.RI "string \fBImageMatchUsnoName\fR () const"
.br
.RI "\fIreturn the results of the usno match.\fR"
.ti -1c
.RI "string \fBImageCatalogName\fR (const DbImageCatalogKind Kind=SExtractor) const"
.br
.RI "\fIreturns the list of stars detected and measured on the \fBImage\fR (a file name for the file system).\fR"
.ti -1c
.RI "string \fBImagePsfName\fR (const DbImagePsfKind Kind=DaophotPsf) const"
.br
.RI "\fIreturns the name where the psf parameters and look-up table for residuals is stored.\fR"
.ti -1c
.RI "string \fBEverythingElseFileName\fR () const"
.br
.ti -1c
.RI "bool \fBCreate\fR (const string &Path)"
.br
.RI "\fITo create the directories where the fits images, catalogues will be put: ex: ~/FakeDb/test: DbImage dbim("test"); dbim.Create("~/FakeDb/");.\fR"
.ti -1c
.RI "string \fBGetFileName\fR (const char *WhichFile) const"
.br
.ti -1c
.RI "void \fBdump\fR (ostream &stream=cout) const"
.br
.ti -1c
.RI "\fB~DbImage\fR ()"
.br
.ti -1c
.RI "void \fBinit_from_name\fR ()"
.br
.ti -1c
.RI "bool \fBwriteEverythingElse\fR ()"
.br
.in -1c
.SS Protected Attributes

.in +1c
.ti -1c
.RI "bool \fBsaveEverythingElse\fR"
.br
.in -1c
.SS Friends

.in +1c
.ti -1c
.RI "class \fBDbImageList\fR"
.br
.ti -1c
.RI "class \fBoperator<<\fR"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 
A DbImage refers to one image as the telescope provides it (more precisely, one CCD), together with associated data used for the reduction (flat and bias frames) or produced  during the reduction (lists of stars). 
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS string DbImage::FitsImageName (const DbImageKind Kind) const
.PP
returns the \fBFitsImage\fR file name (a file name for the file system).
.PP
The Kind argument can be Raw or FlatFielded. Nothing ensures that the file exists. One may use the FileExists routine  to check. 
.SS string DbImage::ImageBackName (const DbImageKind Kind) const
.PP
same for the \fBImageBack\fR (background value and rms interpolated map).
.PP
Same remark as above concerning the existence. 
.SS string DbImage::ImageCatalogName (const DbImageCatalogKind Kind = SExtractor) const
.PP
returns the list of stars detected and measured on the \fBImage\fR (a file name for the file system).
.PP
The Kind argument can be SExtractor or Fitted_for_seeing.  See FitsImageName for caution instructions 

.SH AUTHOR
.PP 
Generated automatically by Doxygen for toads from the source code.