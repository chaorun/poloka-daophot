.TH "reducedimage.cc" 3 "8 Feb 2004" "toads" \" -*- nroff -*-
.ad l
.nh
.SH NAME
reducedimage.cc \- 
.SH SYNOPSIS
.br
.PP
\fC#include <iostream>\fR
.br
\fC#include "fitsimage.h"\fR
.br
\fC#include "fileutils.h"\fR
.br
\fC#include "reducedimage.h"\fR
.br
\fC#include "astroutils.h"\fR
.br
\fC#include "frame.h"\fR
.br
\fC#include "fitstoad.h"\fR
.br
\fC#include "sestar.h"\fR
.br
\fC#include "cluster.h"\fR
.br
\fC#include "sextractor_box.h"\fR
.br
\fC#include "toadscards.h"\fR
.br
\fC#include "seeing_box.h"\fR
.br
\fC#include "fastfinder.h"\fR
.br
\fC#include "wcsutils.h"\fR
.br
\fC#include "imagelist.cc"\fR
.br

.SS Defines

.in +1c
.ti -1c
.RI "#define \fBTYPE_FILE_NAME\fR  "type.name""
.br
.ti -1c
.RI "#define \fBUNDEFINED\fR  -1"
.br
.ti -1c
.RI "#define \fBREAD_ROUTINE\fR(ROUTINE_NAME, VALUETYPE, FITS_KEY_NAME)"
.br
.ti -1c
.RI "#define \fBSET_ROUTINE\fR(ROUTINE_NAME, VALUETYPE, FITS_KEY_NAME)"
.br
.ti -1c
.RI "#define \fBREMOVE_ROUTINE\fR(ROUTINE_NAME, FITS_KEY_NAME)"
.br
.ti -1c
.RI "#define \fBHAS_ROUTINE\fR(ROUTINE_NAME, FITS_KEY_NAME)"
.br
.ti -1c
.RI "#define \fBREAD_AND_SET_ROUTINES\fR(ROUTINE_NAME, VALUETYPE, FITS_KEY_NAME)"
.br
.in -1c
.SS Functions

.in +1c
.ti -1c
.RI "\fBREAD_AND_SET_ROUTINES\fR (Exposure, double,"TOADEXPO") READ_AND_SET_ROUTINES(Epoch, double,"TOADEQUI") READ_AND_SET_ROUTINES(PixelSize, double,"TOADPIXS") READ_AND_SET_ROUTINES(Gain, double,"TOADGAIN") READ_AND_SET_ROUTINES(ReadoutNoise, double,"TOADRDON") READ_AND_SET_ROUTINES(Band, string,"TOADBAND") READ_AND_SET_ROUTINES(Filter, string,"TOADFILT") READ_AND_SET_ROUTINES(Chip, int,"TOADCHIP") READ_AND_SET_ROUTINES(Date, string,"TOADDATE") READ_AND_SET_ROUTINES(TimeObs, string,"TOADUTIM") READ_AND_SET_ROUTINES(PhotomReference, string,"PHOTOREF") READ_AND_SET_ROUTINES(Target, string,"TOADOBJE") READ_AND_SET_ROUTINES(Airmass, double,"TOADAIRM") READ_AND_SET_ROUTINES(SignalToNoise23, double,"USNOSB23") READ_AND_SET_ROUTINES(ZeroPoint, double,"ZEROUSNO") READ_AND_SET_ROUTINES(Zerop, double,"TOADPZPT") READ_AND_SET_ROUTINES(ZP0, double,"ZP0") HAS_ROUTINE(ZP0,"ZP0") READ_AND_SET_ROUTINES(ZP, double,"ZP") HAS_ROUTINE(ZP,"ZP") READ_AND_SET_ROUTINES(ZZZeroP, double,"ZPTOADS") HAS_ROUTINE(ZZZeroP,"ZPTOADS") REMOVE_ROUTINE(ZZZeroP,"ZPTOADS") double \fBReducedImage\fR"
.br
.ti -1c
.RI "\fBSET_ROUTINE\fR (OldGain, double,"OLDGAIN")"
.br
.ti -1c
.RI "\fBREMOVE_ROUTINE\fR (Seeing,"SESEEING")"
.br
.ti -1c
.RI "\fBREAD_AND_SET_ROUTINES\fR (Seeing, double,"SESEEING")"
.br
.ti -1c
.RI "\fBREMOVE_ROUTINE\fR (SESky,"SEXSKY")"
.br
.ti -1c
.RI "\fBSET_ROUTINE\fR (SESky, double,"SEXSKY")"
.br
.ti -1c
.RI "\fBREMOVE_ROUTINE\fR (SESigma,"SEXSIGMA")"
.br
.ti -1c
.RI "\fBSET_ROUTINE\fR (SESigma, double,"SEXSIGMA")"
.br
.ti -1c
.RI "\fBSET_ROUTINE\fR (BackSub, bool,"BACK_SUB")"
.br
.ti -1c
.RI "\fBREMOVE_ROUTINE\fR (BackLevel,"BACKLEV")"
.br
.ti -1c
.RI "\fBSET_ROUTINE\fR (SigmaBack, double,"SKYSIGMA")"
.br
.ti -1c
.RI "\fBSET_ROUTINE\fR (NoisePow, double,"NOISEPOW")"
.br
.ti -1c
.RI "\fBSET_ROUTINE\fR (OriginalSkyLevel, double,"SKYLEV")"
.br
.ti -1c
.RI "\fBSET_ROUTINE\fR (OriginalSaturation, double,"ORIGSATU")"
.br
.ti -1c
.RI "\fBSET_ROUTINE\fR (Saturation, double,"SATURLEV")"
.br
.ti -1c
.RI "\fBSET_ROUTINE\fR (FlatFieldNoise, double,"FLATNOIS")"
.br
.ti -1c
.RI "\fBSET_ROUTINE\fR (ProfileError, double,"SIGPSF")"
.br
.ti -1c
.RI "bool \fBBoolImageOr\fR (ReducedImageList &List, string(ReducedImage::*InFitsFileName)() const, bool(ReducedImage::*MakeInFits)(), const string OutFitsName)"
.br
.RI "\fIPerforms the boolean OR of boolean images (Dead, Satur). call the "Make" routine (3rd argument) if the file (2nd argument) of one component is missing.\fR"
.ti -1c
.RI "bool \fBBoolImageAnd\fR (ReducedImageList &List, string(ReducedImage::*InFitsFileName)() const, bool(ReducedImage::*MakeInFits)(), const string OutFitsName)"
.br
.RI "\fIPerforms the boolean AND of boolean images (Dead, Satur). call the "Make" routine (3rd argument) if the file (2nd argument) of one component is missing is missing.\fR"
.ti -1c
.RI "bool \fBIncreasingSeeing\fR (const \fBReducedImage\fR *one, const \fBReducedImage\fR *two)"
.br
.RI "\fIallows to sort a list in increasing seeing order.\fR"
.ti -1c
.RI "bool \fBIncreasingDate\fR (const \fBReducedImage\fR *one, const \fBReducedImage\fR *two)"
.br
.RI "\fIallows to sort a list in increasing date order.\fR"
.ti -1c
.RI "bool \fBIncreasingResolution\fR (const \fBReducedImage\fR *one, const \fBReducedImage\fR *two)"
.br
.RI "\fIallows to sort a list in increasing pixel scale order.\fR"
.ti -1c
.RI "bool \fBDecreasingArea\fR (const \fBReducedImage\fR *one, const \fBReducedImage\fR *two)"
.br
.RI "\fIallows to sort a list in decreasing area.\fR"
.ti -1c
.RI "\fBReducedImage\fR* \fBReducedImageRead\fR (const char *Name)"
.br
.RI "\fIto Reload an already existing \fBReducedImage\fR.\fR"
.ti -1c
.RI "\fBReducedImage\fR* \fBReducedImageRead\fR (const string &Name)"
.br
.RI "\fIto Reload an already existing \fBReducedImage\fR.\fR"
.in -1c
.SS Variables

.in +1c
.ti -1c
.RI "template class \fBImageList< ReducedImage >\fR"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 
 reducedimage.h
.PP
.SH DEFINE DOCUMENTATION
.PP 
.SS #define HAS_ROUTINE(ROUTINE_NAME, FITS_KEY_NAME)
.PP
\fBValue:\fR
.PP
.nf
bool ReducedImage::Has##ROUTINE_NAME() const \
{\
  return( has_key(FITS_KEY_NAME,"Has"#ROUTINE_NAME));\
}
.fi
.SS #define READ_AND_SET_ROUTINES(ROUTINE_NAME, VALUETYPE, FITS_KEY_NAME)
.PP
\fBValue:\fR
.PP
.nf
        READ_ROUTINE(ROUTINE_NAME, VALUETYPE, FITS_KEY_NAME)\
        SET_ROUTINE(ROUTINE_NAME, VALUETYPE, FITS_KEY_NAME)
.fi
.SS #define READ_ROUTINE(ROUTINE_NAME, VALUETYPE, FITS_KEY_NAME)
.PP
\fBValue:\fR
.PP
.nf
VALUETYPE ReducedImage::ROUTINE_NAME() const\
{\
  return read_##VALUETYPE##_key(FITS_KEY_NAME,#ROUTINE_NAME);\
}
.fi
.SS #define REMOVE_ROUTINE(ROUTINE_NAME, FITS_KEY_NAME)
.PP
\fBValue:\fR
.PP
.nf
void ReducedImage::Remove##ROUTINE_NAME()\
{\
  remove_key(FITS_KEY_NAME,"Remove"#ROUTINE_NAME);\
}
.fi
.SS #define SET_ROUTINE(ROUTINE_NAME, VALUETYPE, FITS_KEY_NAME)
.PP
\fBValue:\fR
.PP
.nf
bool ReducedImage::Set##ROUTINE_NAME(const VALUETYPE &Value, const string Comment)\
{\
  return set_##VALUETYPE##_key(Value,FITS_KEY_NAME,"Set"#ROUTINE_NAME, Comment);\
}
.fi
.SH AUTHOR
.PP 
Generated automatically by Doxygen for toads from the source code.