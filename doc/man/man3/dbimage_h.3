.TH "dbimage.h" 3 "8 Feb 2004" "toads" \" -*- nroff -*-
.ad l
.nh
.SH NAME
dbimage.h \- documentation for the \fBDbImage\fR class and the  file, and more generally, the . 
.SH SYNOPSIS
.br
.PP
\fC#include <string>\fR
.br
\fC#include <iostream>\fR
.br
\fC#include "rootstuff.h"\fR
.br
\fC#include <list>\fR
.br
.SS Compounds

.in +1c
.ti -1c
.RI "class \fBDbImage\fR"
.br
.ti -1c
.RI "class \fBDbImageList\fR"
.br
.RI "\fIDbImages can be globally located and stored into image lists.\fR"
.in -1c
.SS Typedefs

.in +1c
.ti -1c
.RI "typedef list<\fBDbImage\fR>::iterator \fBDbImageIterator\fR"
.br
.ti -1c
.RI "typedef list<\fBDbImage\fR>::const_iterator \fBDbImageCIterator\fR"
.br
.in -1c
.SS Enumerations

.in +1c
.ti -1c
.RI "enum \fBDbImageKind\fR { \fBRaw\fR =  1, \fBCalibrated\fR, \fBElixir\fR }"
.br
.ti -1c
.RI "enum \fBDbImageCatalogKind\fR { \fBSExtractor\fR =  1, \fBFitted_for_seeing\fR, \fBDaophotAls\fR, \fBDaophotAp\fR, \fBDaophotNei\fR, \fBDaophotLst\fR, \fBDaophotPk\fR, \fBDaophotNst\fR }"
.br
.ti -1c
.RI "enum \fBDbImagePsfKind\fR { \fBDaophotPsf\fR =  1 }"
.br
.in -1c
.SS Functions

.in +1c
.ti -1c
.RI "void \fBDbInit\fR ()"
.br
.RI "\fIreads the config file. Called automatically if not user called.\fR"
.ti -1c
.RI "void \fBDbConfigDump\fR (ostream &stream=cout)"
.br
.RI "\fIdumps to cout the (interpreted) contents of the configuration file.\fR"
.ti -1c
.RI "int \fBInstallImage\fR (const char *a_path, const char *a_file, DbImageKind kind)"
.br
.ti -1c
.RI "int \fBAssignInfo\fR (const \fBDbImage\fR &\fBImage\fR, const string &FlatFitsFileName, const char *WhichInfo)"
.br
.ti -1c
.RI "int \fBDbConfigSetDumpLevel\fR (const int level)"
.br
.ti -1c
.RI "string \fBDbConfigFileName\fR ()"
.br
.ti -1c
.RI "void \fBDbConfigAddImagePath\fR (const char *a_path, const char *a_path_name)"
.br
.ti -1c
.RI "int \fBDbConfigFileParse\fR (const char *ConfigFileName)"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 
documentation for the \fBDbImage\fR class and the  file, and more generally, the .
.PP
.PP
.SH FUNCTION DOCUMENTATION
.PP 
.SS void DbConfigDump (ostream & stream = cout)
.PP
dumps to cout the (interpreted) contents of the configuration file.
.PP
It triggers DbInit if not already done. 
.SS void DbInit ()
.PP
reads the config file. Called automatically if not user called.
.PP
If you programm does a lot of things before actually calling any \fBDbImage\fR constructor,  it may be a good idea to call it early in your main to check if the configuration file is correct. 
.SH AUTHOR
.PP 
Generated automatically by Doxygen for toads from the source code.