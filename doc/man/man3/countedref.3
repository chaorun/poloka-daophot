.TH "CountedRef" 3 "8 Feb 2004" "toads" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CountedRef \- an implementation of "smart pointers" that counts references to an object. The obejct it "points" to has to derive from RefCount. 
.SH SYNOPSIS
.br
.PP
\fC#include <countedref.h>\fR
.PP
Inherited by \fBNightElement\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBCountedRef\fR ()"
.br
.ti -1c
.RI "\fBCountedRef\fR (T *pp)"
.br
.ti -1c
.RI "\fBCountedRef\fR (const T *pp)"
.br
.ti -1c
.RI "void \fBoperator=\fR (const CountedRef &Right)"
.br
.ti -1c
.RI "\fBCountedRef\fR (const CountedRef &Other)"
.br
.ti -1c
.RI "\fBoperator const T *\fR () const"
.br
.ti -1c
.RI "\fBoperator T *\fR ()"
.br
.ti -1c
.RI "T* \fBoperator->\fR ()"
.br
.ti -1c
.RI "const T* \fBoperator->\fR () const"
.br
.ti -1c
.RI "T& \fBoperator *\fR ()"
.br
.ti -1c
.RI "const T& \fBoperator *\fR () const"
.br
.ti -1c
.RI "bool \fBoperator==\fR (const CountedRef< T > &Right) const"
.br
.ti -1c
.RI "bool \fBoperator==\fR (const T *Right) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fR (const CountedRef< T > &Right) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fR (const T *Right) const"
.br
.ti -1c
.RI "template<class A> \fBoperator A *\fR ()"
.br
.ti -1c
.RI "template<class A> \fBoperator const A *\fR () const"
.br
.ti -1c
.RI "\fB~CountedRef\fR ()"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 

.SS template<class T>  class CountedRef
an implementation of "smart pointers" that counts references to an object. The obejct it "points" to has to derive from RefCount.
.PP


.SH AUTHOR
.PP 
Generated automatically by Doxygen for toads from the source code.