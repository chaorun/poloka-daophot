.TH "TanPix2RaDec" 3 "8 Feb 2004" "toads" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TanPix2RaDec \- the transformation that handles pix to sideral transfos (Gnomonic, possibly with polynomial distortions). 
.SH SYNOPSIS
.br
.PP
\fC#include <gtransfo.h>\fR
.PP
Inherits \fBGtransfo\fR.
.PP
.SS Public Methods

.in +1c
.ti -1c
.RI "\fBTanPix2RaDec\fR (const \fBGtransfoLin\fR &Pix2Tan, const \fBPoint\fR &TangentPoint, const \fBGtransfoQuad\fR *Corrections=NULL)"
.br
.RI "\fIPix2Tan describes the transfo from pix to tangent plane (in degrees). TangentPoint in degrees. Corrections are applied between Lin and deprojection parts (as in Swarp).\fR"
.ti -1c
.RI "\fBTanPix2RaDec\fR (const TanPix2RaDec &Original)"
.br
.ti -1c
.RI "void \fBoperator=\fR (const TanPix2RaDec &)"
.br
.ti -1c
.RI "\fBTanPix2RaDec\fR ()"
.br
.ti -1c
.RI "void \fBapply\fR (const double Xin, const double Yin, double &Xout, double &Yout) const"
.br
.ti -1c
.RI "\fBPoint\fR \fBapply\fR (const \fBPoint\fR &Pin) const"
.br
.ti -1c
.RI "TanPix2RaDec \fBoperator *\fR (const \fBGtransfoLin\fR &Right)"
.br
.RI "\fIcomposition with \fBGtransfoLin\fR.\fR"
.ti -1c
.RI "\fBTanRaDec2Pix\fR \fBinvert\fR () const"
.br
.RI "\fIapproximate inverse : it ignores corrections;.\fR"
.ti -1c
.RI "\fBGtransfo\fR* \fBRoughInverse\fR (const \fBFrame\fR &Region) const"
.br
.RI "\fIOverload the "generic routine" (available for all \fBGtransfo\fR types.\fR"
.ti -1c
.RI "\fBGtransfo\fR* \fBInverseTransfo\fR (const double Precision, const \fBFrame\fR &Region) const"
.br
.RI "\fIInverse transfo: returns a \fBTanRaDec2Pix\fR if there are no corrections, or the iterative solver if there are.\fR"
.ti -1c
.RI "void \fBSetCorrections\fR (const \fBGtransfoQuad\fR *Corrections)"
.br
.RI "\fISets the corrections (it can be a cubic ocrrection).\fR"
.ti -1c
.RI "\fBGtransfo\fR* \fBClone\fR () const"
.br
.RI "\fIreturns a copy (allocated by new) of the transformation.\fR"
.ti -1c
.RI "void \fBdump\fR (ostream &stream) const"
.br
.RI "\fIdumps the transfo coefficients to stream.\fR"
.ti -1c
.RI "\fBPoint\fR \fBTangentPoint\fR () const"
.br
.RI "\fIThe tangent point (in degrees).\fR"
.ti -1c
.RI "\fBGtransfoLin\fR \fBLinPart\fR () const"
.br
.RI "\fIThe Linear part (corresponding to CD's and CRPIX's).\fR"
.ti -1c
.RI "const \fBGtransfoQuad\fR* \fBCorr\fR () const"
.br
.RI "\fIthe correction (can be more than quadratic).\fR"
.ti -1c
.RI "\fBPoint\fR \fBCrPix\fR () const"
.br
.RI "\fIthe CRPIX values (this is WCS jargon).\fR"
.ti -1c
.RI "double \fBfit\fR (const StarMatchList &List, const \fBGtransfo\fR *PriorTransfo=NULL, const \fBGtransfo\fR *PosteriorTransfo=NULL)"
.br
.RI "\fIfits a transfo to a list of star pairs (p1,p2).\fR"
.ti -1c
.RI "\fB~TanPix2RaDec\fR ()"
.br
.in -1c
.SH DETAILED DESCRIPTION
.PP 
the transformation that handles pix to sideral transfos (Gnomonic, possibly with polynomial distortions).
.PP
.SH MEMBER FUNCTION DOCUMENTATION
.PP 
.SS double TanPix2RaDec::fit (const StarMatchList & List, const \fBGtransfo\fR * PriorTransfo = NULL, const \fBGtransfo\fR * PosteriorTransfo = NULL)\fC [virtual]\fR
.PP
fits a transfo to a list of star pairs (p1,p2).
.PP
After the fit this(PriorTransfo(p1)) yields approximately PosteriorTransfo(p2). The returned value is the chi2. 
.PP
Reimplemented from \fBGtransfo\fR.

.SH AUTHOR
.PP 
Generated automatically by Doxygen for toads from the source code.